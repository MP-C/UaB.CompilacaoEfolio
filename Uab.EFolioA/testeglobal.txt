#START
# inicio estrututras
structs{#início
    # dentro de estrutura
    point2D { float x; }; # estrutrura com variavel
    point3D { bool x,y,z;};  #  estrutrura com 2 variavel
    point3D { float x,y,z;};  #  estrutrura com 2 variavel
    point3D { int x,y,z;};  #  estrutrura com 2 variavel
    pointND { int x []; };#pointnDéumvetordereais

    # tem todos os tipos de vetores, sem tamanho
    int v[];    # declara vetor, que tem de ter tamanho 1 e valor 0
    int v_1[10]; # declara vetor com tamanho 10, que inicia tudo com zeros
    int v_as[a]; # declara vetor com variavel
    int v_AS[a+2];
    int v_A1[a+2]; # declara com calculo
    int v_a1[a+2];
    int v_a_1[a+2];
    int v_a_2_[a+2];
    int a_1[a+2];
    int D_1[a+2];
    int D_a1[a+2];

    # tem todos os tipos de vetores, com tamanho
    int vetor [] = {1};
    int v_2[10] = {1,2};
    int v_b[a] = {1,2,3};
    int v_bb[a+2] = {1,2,3};
    int v_B1[a+2] = {1,2};
    int v_b1[a+2] = {2,3};
    int v_b_3[a+2] = {1,2,3};
    int v_b_4_[a+2] = {1,2,3};

     # tem todos os tipos de vetores, com e sem tamanho,
     # com diferentes tipos de cálculos
    int vtamanho_A1[a*2] = {1,2,3}; # vetor com multiplicacao
    int vtamanho_com1[a-2] = {1,2,3}; # vetor com subtração
    int vtamanho_com_1[a/2] = {1,2,3}; # vetor com divisão
    int C_1[a+2] = {1,2,3}; # vetor com calculo e com declaração maiuscula

    # geradores
    int g[10] = gen(1,9);
    int g[a+1] = gen(1,9);
    int g_1[a+2] = gen(0,9);
    int g1[a+3] = gen(2,0);
    int g[a+4] = gen(0,1);
    int g_2[a+5] = gen(9,-1); # decrementar
    int g2[10] = gen(2,0);
    int Gcalculo[a*2] = gen(1,9);
    int Gcalculo1[a/2] = gen(2,0);
    int Gcalculo_1[a-2] = gen(0,9);


} # fim primeira estrutura

# estrutura dentro de estrutura
structs{#início

    # estrutura nivel 1
    structs{ # estrutura nivel 2

        point2D { bool x; }; # estrutrura com variavel
        point3D { bool x,y,z;};  #  estrutrura com 2 variavel
        pointND { bool x []; };#pointnDéumvetordereais

        # tem todos os tipos de vetores, sem tamanho
        int v[];    # declara vetor, que tem de ter tamanho 1 e valor 0
        int v_1[10]; # declara vetor com tamanho 10, que inicia tudo com zeros
        int v_as[a]; # declara vetor com variavel
        int v_AS[a+2];
        int v_A1[a+2]; # declara com calculo
        int v_a1[a+2];
        int v_a_1[a+2];
        int v_a_2_[a+2];
        int a_1[a+2];
        int D_1[a+2];
        int D_a1[a+2];

        # tem todos os tipos de vetores, com tamanho
        int vetor [] = {1};
        int v_2[10] = {1,2};
        int v_b[a] = {1,2,3};
        int v_bb[a+2] = {1,2,3};
        int v_B1[a+2] = {1,2};
        int v_b1[a+2] = {2,3};
        int v_b_3[a+2] = {1,2,3};
        int v_b_4_[a+2] = {1,2,3};

         # tem todos os tipos de vetores, com e sem tamanho,
         # com diferentes tipos de cálculos
        int vtamanho_A1[a*2] = {1,2,3}; # vetor com multiplicacao
        int vtamanho_com1[a-2] = {1,2,3}; # vetor com subtração
        int vtamanho_com_1[a/2] = {1,2,3}; # vetor com divisão
        int C_1[a+2] = {1,2,3}; # vetor com calculo e com declaração maiuscula

        # geradores
        int g[10] = gen(1,9);
        int g[a+1] = gen(1,9);
        int g_1[a+2] = gen(0,9);
        int g1[a+3] = gen(2,0);
        int g[a+4] = gen(0,1);
        int g_2[a+5] = gen(9,-1); # decrementar
        int g_2[a+5] = gen(1,-1); # decrementar
        int g_2[a+5] = gen(30,-5); # decrementar
        int g2[10] = gen(2,0);
        int Gcalculo[a*2] = gen(1,9);
        int Gcalculo1[a/2] = gen(2,0);
        int Gcalculo_1[a-2] = gen(0,9);
    } #fim primeira estrutura
}
# Fim estruturas


# constante
const { }
const { int abc = 100; }
const { float de = 10,10; }
const { bool f = false; }
const { bool ghi = true; }
const { int jkl = 100, float aaa = 20,20; }
const { int mno = 100, bool bbb = false; }
const { int pqr = 100, bool ccc = true; }
const { stu = 100, float ddd = 20,20; }
const { vwx = 100, eee = 20,20; }
const { x = 100, fff = true, hhh = 12,12; }
const { z = 100, ggg = false; }
const {
    int max = 100;
}

const { # comentario dento de const
    int j = square_root(pow);
    int k = square_root(pow(q.x+e.a,8)+pow(1,8));
    int l = square_root(pow(q.x+e.1,8),2);
    int m = write();
    int n = write_all();
    int o = write_string();
    int p = read();
    int q = read_all();
    int r = read_string();
}
const {
    pow(1,8);
    square_root(8);
}

#Constante
const {intabc=0;}
const {intabc=0,float=2.3;}
const { float def = size(s);}
const { float def = resize(r,1);}
const { float def = pow(a,1);}
const { float def = pow(a+2,1);}
const { float def = square_root(8);}
const { float def = square_root(r,1);}
const { float def = square_root(pow(2),1);}
const { float def = square_root(pow(2+1),1);}
const { float def = square_root(pow((q.x-p.x),2),1);}
const { float def = square_root(pow((q.x-p.x),2)+pow((q.y-p.y),2),1);}
const { float def = resize(r,1);}

#Global
global{
    # comentario
}
#Global com metodos
global { float def = size(s);}
global { float def = resize(r,1);}
global { float def = pow(a,1);}
global { float def = pow(a+2,1);}
global { float def = square_root(8);}
global { float def = square_root(r,1);}
global { float def = square_root(pow(2),1);}
global { float def = square_root(pow(2+1),1);}
global { float def = square_root(pow((q.x-p.x),2),1);}
global { float def = square_root(pow((q.x-p.x),2)+pow((q.y-p.y),2),1);}
global { float def = resize(r,1);}

#Main
main() bool{
    int n;
    int a1 = size();
    int a2 = size(v);
    int a3 = resize(v,2);
    int a4 = size(v3);
    int a5 = resize(v3,1);
}

#funcoes
distance2D (Point2Dp,Point2Dq) float{
    intx=1;
}

main() bool{
    # comentarios
    int a++;
    int b--;
    int c**;
    int d//;
    int e, f, g;
    int e*a;
    int 11*a;
    int e*12;
    g = 10 * 10;

    v = read();

    #if-statements
    if(x==1){
        #if-inside
        int x = 2;
    }
    if( (a+1) >3){
        v[]={1,2,3};
    }else{
        int y = 0;
    }

     if( (a+1) >3){
         while( t > 0){
             if( b >3){
             }
         }
     }else{
           if( (a+1) >3){
        }
     }

    # TODO: !! A CONFIRMAR SE ISTO ESTÀ CERTO!!!!
    calculA(int);
    calculB(bool);
    calculC(float);
    calculD(float, asb);
    calculE(bool, asb);
    calculF(int, asb);
    calculG(a,b,d,a,s,d);
    calculH2(int);
    calculH3(int);
    calculH();
    calculH1(int){

    };
    calculH4(int){

        #comentario

        calculH();
        calculH4(int){

        }
        size(s);}
        resize(r,1);}
        pow(a,1);}
        int j = square_root(pow);
        int k = square_root(pow(q.x+e.a,8)+pow(1,8));
        int l = square_root(pow(q.x+e.1,8),2);
        int m = write();
        int n = write_all();
        int o = write_string();
        int p = read();
        int q = read_all();
        int r = read_string();


         for(i,2,n,1){}
         while( t > 0){}

         for(i,2,n,1){
               #  comentario for 1
               for(2,1.0,n,1.2){
                   #  comentario for 2
                   while( n > 0){
                       #  comentario While
                   }
               }
           }

           while( t > 0){
               for(i,2,n,1){
                   while( p < 12){


                        #if-statements
                        if(x==1){
                            #if-inside
                            int x = 2;
                        }

                        if( (a+1) >3){
                            v[]={1,2,3};
                        }else{
                            int y = 0;
                        }

                   }
               }
           }
    };


    calculH5(int){

    };

    while( p < 0){

    }

    while( r <= 12){

    }
    while( s =< 12.23){

    }
    while( i == true){

    }
    while( j != false){

    }

    while( j != 1){

    }

    while( j != 1.2){

    }

    for(i,2,n,1){
        #  comentario for 1
        for(2,1.0,n,1.2){
            #  comentario for 2
            while( n > 0){
                #  comentario While
            }
        }
    }

    while( t > 0){
        for(i,2,n,1){
            while( p < 12){
             # comentario while
            }
        }
    }
}