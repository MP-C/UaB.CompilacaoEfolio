structs {
    # geradores
    int g[10] = gen(1,9);
    int g[a + 1] = gen(1,9);
    int g_1[a + 2] = gen(0,9);
    int g1[a + 3] = gen(2,0);
    int g[a + 4] = gen(0,1);
    int g_2[a + 5] = gen(9,-1); # decrementar
    int g2[10] = gen(2,0);
    int Gcalculo[a * 2] = gen(1,9);
    int Gcalculo1[a / 2] = gen(2,0);
    int Gcalculo_1[a - 2] = gen(0,9);
}

# Constante
const {intabc=0;}
const {intabc=0,float=2.3;}
const { float def = size(s);}
const { float def = resize(r,1);}
const { float def = pow(a,1);}
const { float def = pow(a+2,1);}
const { float def = square_root(8);}
const { float def = square_root(r,1);}
const { float def = square_root(pow(2),1);}
const { float def = square_root(pow(2+1),1);}
const { float def = square_root(pow((q.x-p.x),2),1);}
const { float def = square_root(pow((q.x-p.x),2)+pow((q.y-p.y),2),1);}
const { float def = resize(r,1);}

#Global
global{
    # comentario
}

#Global com metodos
global { float def = size(s);}
global { float def = resize(r,1);}
global { float def = pow(a,1);}
global { float def = pow(a+2,1);}
global { float def = square_root(8);}
global { float def = square_root(r,1);}
global { float def = square_root(pow(2),1);}
global { float def = square_root(pow(2+1),1);}
global { float def = square_root(pow((q.x-p.x),2),1);}
global { float def = square_root(pow((q.x-p.x),2)+pow((q.y-p.y),2),1);}
global { float def = resize(r,1);}

#funcoes
distance2D (Point2Dp,Point2Dq) float{
    intx=1;
}


#global {
    #int a,s;
    #int v[];
#}


main() bool{

    int n;
    int a1 = size();
    int a2 = size(v);
    int a3 = resize(v,2);
    int a4 = size(v3);
    int a5 = resize(v3,1);

    while( p < 0){
        # comment
    }

    while( r <= 12){
        # comment
    }
    while( s =< 12.23){
        # comment
    }
    while( i == true){
        # comment
    }
    while( j != false){
        # comment
    }

    while( j != 1){
        # comment
    }

    while( j != 1.2){
        # comment
    }

    for(i,2,n,1){
        #  comentario for 1
        for(2,1.0,n,1.2){
            #  comentario for 2
            while( n > 0){
                #  comentario While
            }
        }
    }
}